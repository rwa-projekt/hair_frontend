{"version":3,"sources":["components/PageTitle/index.js","views/App/Hairstyles/components/ServiceCard.js","views/App/Hairstyles/index.js"],"names":["PageTitle","navigate","useNavigate","menuItem","useGetMenuItem","breadcrumbs","sx","mb","variant","title","role","separator","underline","color","onClick","cursor","AdminPageTitle","location","useLocation","useGetAdminMenuItem","baseRoute","url","isBaseRoute","pathname","middleLink","children","find","item","path","name","lastLink","Card","smallScreen","useIsTablet","Box","width","Stack","direction","maxWidth","px","src","avatar","style","aspectRatio","objectFit","borderRadius","alignItems","justifyContent","mt","Typography","fontWeight","price","Chip","label","time_needed","Hairstyles","dispatch","useDispatch","hairstyles","useIsMobile","useSelector","state","HAIRSTYLES","useEffect","type","GET_HAIRSTYLES","spacing","status","LinearProgress","flexWrap","data","map","index"],"mappings":"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","file":"static/js/21.4ac28cd5.chunk.js","sourcesContent":["import React from 'react'\nimport { useNavigate, useLocation } from 'react-router-dom'\n\n// Hooks\nimport useGetMenuItem, { useGetAdminMenuItem } from '../../hooks/useGetMenuItem'\n\n// MUI\nimport { Typography, Breadcrumbs, Link, Box } from '@mui/material'\n\n\nexport default function PageTitle(){\n\n    // Hooks\n    const navigate = useNavigate()\n    const menuItem = useGetMenuItem()\n\n    if(!menuItem.breadcrumbs){\n        return null;\n    }\n\n    return(\n        <Box sx={{ mb: 4 }}>\n            <Typography sx={{ mb: 0.5 }} variant=\"h5\">\n                { menuItem.title }\n            </Typography>\n\n            <div role=\"presentation\">\n                <Breadcrumbs separator=\">\" aria-label=\"breadcrumb\">\n\n                    {/* Base route */}\n                    <Link \n                        underline=\"hover\" \n                        color=\"inherit\" \n                        onClick={() => navigate('/dashboard')}\n                        sx={{ cursor: 'pointer' }}\n                    >\n                        Dashboard\n                    </Link>\n\n                    {/* Current route */}\n                    <Typography color=\"text.primary\">\n                        { menuItem.title }\n                    </Typography>\n                </Breadcrumbs>\n            </div>\n        </Box>\n    )\n}\n\nfunction AdminPageTitle(){\n\n    // Hooks\n    const navigate = useNavigate()\n    const location = useLocation()\n    const menuItem = useGetAdminMenuItem()\n\n    if(!menuItem.breadcrumbs){\n        return null;\n    }\n\n    // Variables\n    const baseRoute = `/${menuItem.url}`\n    const isBaseRoute = location.pathname === baseRoute\n    const middleLink = menuItem.children.find(item => item.path === '').name\n    const lastLink = \n        menuItem.children.find(item => location.pathname == `${baseRoute}/${item.path}`)?.name || \n        menuItem.children.find(item => item.path === '*').name\n\n    return(\n        <Box sx={{ mb: 4 }}>\n            <Typography sx={{ mb: 0.5 }} variant=\"h5\">\n                { menuItem.title }\n            </Typography>\n\n            <div role=\"presentation\">\n                <Breadcrumbs separator=\">\" aria-label=\"breadcrumb\">\n\n                    {/* Base route */}\n                    <Link \n                        underline=\"hover\" \n                        color=\"inherit\" \n                        onClick={() => navigate('/admin/dashboard')}\n                        sx={{ cursor: 'pointer' }}\n                    >\n                        Dashboard\n                    </Link>\n\n                    {/* Current route */}\n                    {\n                        isBaseRoute ?\n                            <Typography>\n                                { middleLink }\n                            </Typography>\n                            :\n                            <Link \n                                underline=\"hover\" \n                                color=\"inherit\" \n                                onClick={() => navigate(baseRoute)}\n                                sx={{ cursor: 'pointer' }}\n                            >\n                                { middleLink }\n                            </Link>\n                    }\n                    \n\n                    {/* Current route */}\n                    {\n                        !isBaseRoute &&\n                            <Typography color=\"text.primary\">\n                                { lastLink }\n                            </Typography>\n                    }\n                </Breadcrumbs>\n            </div>\n        </Box>\n    )\n}\n\nexport { AdminPageTitle }","import React from 'react'\nimport { useIsTablet } from '../../../../hooks/useDevice';\n\n// MUI\nimport { Box, Stack, Typography, Chip } from '@mui/material'\n\nexport default function Card({ item }){\n\n    // Variables\n    const smallScreen = useIsTablet()\n\n    return(\n        <Box sx={{ width: smallScreen ? '100%' : '33.3%', mb: 4 }}>\n            <Stack direction=\"column\" sx={{ maxWidth: '100%', px: smallScreen ? 0 : 2 }}>\n                <img \n                    src={item.avatar}  \n                    style={{ width: '100%', aspectRatio: '1/1', objectFit: 'cover', borderRadius: 16 }}\n                />\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ mt: 2, width: '100%' }}>\n                    <Stack direction=\"column\" sx={{ width: '100%' }}>\n                        <Typography \n                            variant=\"subtitle1\" \n                            sx={{ fontWeight: 600, maxWidth: '100%' }}\n                        >\n                            { item.name }\n                        </Typography>\n                        <Typography variant=\"subtitle2\" sx={{ fontWeight: 300 }}>\n                            { item.price } KM\n                        </Typography>\n                    </Stack>\n                    <Chip sx={{ width: 'max-content' }} label={`${item.time_needed} min.`} variant=\"outlined\" color=\"secondary\" />\n                </Stack>\n            </Stack>\n        </Box>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { useIsMobile, useIsTablet } from '../../../hooks/useDevice'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// MUI\nimport { Box, Stack, Typography, Chip, LinearProgress } from '@mui/material'\n\n// Components\nimport PageTitle from '../../../components/PageTitle'\nimport Card from './components/ServiceCard';\n\n\n// Icons\nimport { GET_HAIRSTYLES } from '../../../state/modules/hairstyles/actions'\n\nexport default function Hairstyles(){\n\n    // Hooks\n    const dispatch = useDispatch()\n    const isTablet = useIsTablet()\n    const isPhone = useIsMobile()\n    \n    // Variables\n    const hairstyles = useSelector(state => state.HAIRSTYLES.hairstyles)\n\n    useEffect(() => {\n      dispatch({\n        type: GET_HAIRSTYLES\n      })\n    }, [])\n\n\n    return(\n        <div>\n            {/* Page title */}\n            <PageTitle />\n\n            <Stack\n                direction=\"row\"\n                alignItems=\"center\"\n                justifyContent=\"space-between\"\n                sx={{ mb: 4 }}\n            >\n                {/* Tabs */}\n                <Stack\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    spacing={1}\n                >\n                    <Chip \n                        label=\"Sve usluge\"\n                        variant=\"filled\"\n                    />\n                </Stack>\n            </Stack>\n\n            {/* Listing Hairstyles */}\n            {\n              hairstyles.status === 'loading' ? \n                <LinearProgress />\n                :\n                <Stack \n                    direction=\"row\" \n                    flexWrap=\"wrap\"\n                    sx={{ width: '100%' }} \n                >\n                    {\n                        hairstyles.data.map((item, index) => (\n                            <Card item={item} key={index} />\n                        ))\n                    }\n                </Stack>\n            }\n        </div>\n    )\n}"],"sourceRoot":""}